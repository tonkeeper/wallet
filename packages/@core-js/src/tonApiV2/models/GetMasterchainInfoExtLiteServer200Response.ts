/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BlockRaw } from './BlockRaw';
import {
    BlockRawFromJSON,
    BlockRawFromJSONTyped,
    BlockRawToJSON,
} from './BlockRaw';
import type { InitStateRaw } from './InitStateRaw';
import {
    InitStateRawFromJSON,
    InitStateRawFromJSONTyped,
    InitStateRawToJSON,
} from './InitStateRaw';

/**
 * 
 * @export
 * @interface GetMasterchainInfoExtLiteServer200Response
 */
export interface GetMasterchainInfoExtLiteServer200Response {
    /**
     * 
     * @type {number}
     * @memberof GetMasterchainInfoExtLiteServer200Response
     */
    mode: number;
    /**
     * 
     * @type {number}
     * @memberof GetMasterchainInfoExtLiteServer200Response
     */
    version: number;
    /**
     * 
     * @type {number}
     * @memberof GetMasterchainInfoExtLiteServer200Response
     */
    capabilities: number;
    /**
     * 
     * @type {BlockRaw}
     * @memberof GetMasterchainInfoExtLiteServer200Response
     */
    last: BlockRaw;
    /**
     * 
     * @type {number}
     * @memberof GetMasterchainInfoExtLiteServer200Response
     */
    lastUtime: number;
    /**
     * 
     * @type {number}
     * @memberof GetMasterchainInfoExtLiteServer200Response
     */
    now: number;
    /**
     * 
     * @type {string}
     * @memberof GetMasterchainInfoExtLiteServer200Response
     */
    stateRootHash: string;
    /**
     * 
     * @type {InitStateRaw}
     * @memberof GetMasterchainInfoExtLiteServer200Response
     */
    init: InitStateRaw;
}

/**
 * Check if a given object implements the GetMasterchainInfoExtLiteServer200Response interface.
 */
export function instanceOfGetMasterchainInfoExtLiteServer200Response(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "mode" in value;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "capabilities" in value;
    isInstance = isInstance && "last" in value;
    isInstance = isInstance && "lastUtime" in value;
    isInstance = isInstance && "now" in value;
    isInstance = isInstance && "stateRootHash" in value;
    isInstance = isInstance && "init" in value;

    return isInstance;
}

export function GetMasterchainInfoExtLiteServer200ResponseFromJSON(json: any): GetMasterchainInfoExtLiteServer200Response {
    return GetMasterchainInfoExtLiteServer200ResponseFromJSONTyped(json, false);
}

export function GetMasterchainInfoExtLiteServer200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetMasterchainInfoExtLiteServer200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'mode': json['mode'],
        'version': json['version'],
        'capabilities': json['capabilities'],
        'last': BlockRawFromJSON(json['last']),
        'lastUtime': json['last_utime'],
        'now': json['now'],
        'stateRootHash': json['state_root_hash'],
        'init': InitStateRawFromJSON(json['init']),
    };
}

export function GetMasterchainInfoExtLiteServer200ResponseToJSON(value?: GetMasterchainInfoExtLiteServer200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'mode': value.mode,
        'version': value.version,
        'capabilities': value.capabilities,
        'last': BlockRawToJSON(value.last),
        'last_utime': value.lastUtime,
        'now': value.now,
        'state_root_hash': value.stateRootHash,
        'init': InitStateRawToJSON(value.init),
    };
}


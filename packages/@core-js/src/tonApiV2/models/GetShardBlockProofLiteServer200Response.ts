/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BlockRaw } from './BlockRaw';
import {
    BlockRawFromJSON,
    BlockRawFromJSONTyped,
    BlockRawToJSON,
} from './BlockRaw';
import type { GetShardBlockProofLiteServer200ResponseLinksInner } from './GetShardBlockProofLiteServer200ResponseLinksInner';
import {
    GetShardBlockProofLiteServer200ResponseLinksInnerFromJSON,
    GetShardBlockProofLiteServer200ResponseLinksInnerFromJSONTyped,
    GetShardBlockProofLiteServer200ResponseLinksInnerToJSON,
} from './GetShardBlockProofLiteServer200ResponseLinksInner';

/**
 * 
 * @export
 * @interface GetShardBlockProofLiteServer200Response
 */
export interface GetShardBlockProofLiteServer200Response {
    /**
     * 
     * @type {BlockRaw}
     * @memberof GetShardBlockProofLiteServer200Response
     */
    masterchainId: BlockRaw;
    /**
     * 
     * @type {Array<GetShardBlockProofLiteServer200ResponseLinksInner>}
     * @memberof GetShardBlockProofLiteServer200Response
     */
    links: Array<GetShardBlockProofLiteServer200ResponseLinksInner>;
}

/**
 * Check if a given object implements the GetShardBlockProofLiteServer200Response interface.
 */
export function instanceOfGetShardBlockProofLiteServer200Response(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "masterchainId" in value;
    isInstance = isInstance && "links" in value;

    return isInstance;
}

export function GetShardBlockProofLiteServer200ResponseFromJSON(json: any): GetShardBlockProofLiteServer200Response {
    return GetShardBlockProofLiteServer200ResponseFromJSONTyped(json, false);
}

export function GetShardBlockProofLiteServer200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetShardBlockProofLiteServer200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'masterchainId': BlockRawFromJSON(json['masterchain_id']),
        'links': ((json['links'] as Array<any>).map(GetShardBlockProofLiteServer200ResponseLinksInnerFromJSON)),
    };
}

export function GetShardBlockProofLiteServer200ResponseToJSON(value?: GetShardBlockProofLiteServer200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'masterchain_id': BlockRawToJSON(value.masterchainId),
        'links': ((value.links as Array<any>).map(GetShardBlockProofLiteServer200ResponseLinksInnerToJSON)),
    };
}


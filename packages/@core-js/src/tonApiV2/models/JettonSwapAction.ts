/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AccountAddress } from './AccountAddress';
import {
    AccountAddressFromJSON,
    AccountAddressFromJSONTyped,
    AccountAddressToJSON,
} from './AccountAddress';
import type { JettonPreview } from './JettonPreview';
import {
    JettonPreviewFromJSON,
    JettonPreviewFromJSONTyped,
    JettonPreviewToJSON,
} from './JettonPreview';

/**
 * 
 * @export
 * @interface JettonSwapAction
 */
export interface JettonSwapAction {
    /**
     * 
     * @type {string}
     * @memberof JettonSwapAction
     */
    dex: JettonSwapActionDexEnum;
    /**
     * 
     * @type {string}
     * @memberof JettonSwapAction
     */
    amountIn: string;
    /**
     * 
     * @type {string}
     * @memberof JettonSwapAction
     */
    amountOut: string;
    /**
     * 
     * @type {AccountAddress}
     * @memberof JettonSwapAction
     */
    userWallet: AccountAddress;
    /**
     * 
     * @type {AccountAddress}
     * @memberof JettonSwapAction
     */
    router: AccountAddress;
    /**
     * 
     * @type {string}
     * @memberof JettonSwapAction
     */
    jettonWalletIn: string;
    /**
     * 
     * @type {JettonPreview}
     * @memberof JettonSwapAction
     */
    jettonMasterIn: JettonPreview;
    /**
     * 
     * @type {string}
     * @memberof JettonSwapAction
     */
    jettonWalletOut: string;
    /**
     * 
     * @type {JettonPreview}
     * @memberof JettonSwapAction
     */
    jettonMasterOut: JettonPreview;
}


/**
 * @export
 */
export const JettonSwapActionDexEnum = {
    Stonfi: 'stonfi',
    Dedust: 'dedust'
} as const;
export type JettonSwapActionDexEnum = typeof JettonSwapActionDexEnum[keyof typeof JettonSwapActionDexEnum];


/**
 * Check if a given object implements the JettonSwapAction interface.
 */
export function instanceOfJettonSwapAction(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "dex" in value;
    isInstance = isInstance && "amountIn" in value;
    isInstance = isInstance && "amountOut" in value;
    isInstance = isInstance && "userWallet" in value;
    isInstance = isInstance && "router" in value;
    isInstance = isInstance && "jettonWalletIn" in value;
    isInstance = isInstance && "jettonMasterIn" in value;
    isInstance = isInstance && "jettonWalletOut" in value;
    isInstance = isInstance && "jettonMasterOut" in value;

    return isInstance;
}

export function JettonSwapActionFromJSON(json: any): JettonSwapAction {
    return JettonSwapActionFromJSONTyped(json, false);
}

export function JettonSwapActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): JettonSwapAction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'dex': json['dex'],
        'amountIn': json['amount_in'],
        'amountOut': json['amount_out'],
        'userWallet': AccountAddressFromJSON(json['user_wallet']),
        'router': AccountAddressFromJSON(json['router']),
        'jettonWalletIn': json['jetton_wallet_in'],
        'jettonMasterIn': JettonPreviewFromJSON(json['jetton_master_in']),
        'jettonWalletOut': json['jetton_wallet_out'],
        'jettonMasterOut': JettonPreviewFromJSON(json['jetton_master_out']),
    };
}

export function JettonSwapActionToJSON(value?: JettonSwapAction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'dex': value.dex,
        'amount_in': value.amountIn,
        'amount_out': value.amountOut,
        'user_wallet': AccountAddressToJSON(value.userWallet),
        'router': AccountAddressToJSON(value.router),
        'jetton_wallet_in': value.jettonWalletIn,
        'jetton_master_in': JettonPreviewToJSON(value.jettonMasterIn),
        'jetton_wallet_out': value.jettonWalletOut,
        'jetton_master_out': JettonPreviewToJSON(value.jettonMasterOut),
    };
}

